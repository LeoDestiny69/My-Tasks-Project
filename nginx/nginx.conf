# nginx/nginx.conf
# This block handles HTTP traffic and redirects it to HTTPS
server {
    listen 80;
    listen [::]:80; # Listen on IPv6 as well

    server_name mytasksproject.duckdns.org; # Replace with your actual domain

    # ACME Challenge location for Certbot renewals
    # This must be accessible via HTTP for Certbot to renew certificates
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP traffic to HTTPS
    # This ensures all requests are served securely
    return 301 https://$host$request_uri;
}

# This block handles HTTPS traffic
server {
    listen 443 ssl http2; # Listen on HTTPS with HTTP/2 support
    listen [::]:443 ssl http2; # Listen on IPv6 as well

    server_name mytasksproject.duckdns.org; # Replace with your actual domain

    # SSL Certificate paths generated by Certbot
    # These paths are relative to the Nginx container's root filesystem,
    # which maps to your ./certbot/conf directory on the host.
    ssl_certificate /etc/letsencrypt/live/mytasksproject.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mytasksproject.duckdns.org/privkey.pem;

    # Include recommended SSL settings from Certbot (for security and performance)
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # DH parameters for stronger key exchange

    # ACME Challenge location for Certbot renewals (also needed for HTTPS if any)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Proxy requests for your backend service
    location /api/ {
        proxy_pass http://backend:3001; # 'backend' is the service name in docker-compose, 3001 is its port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy requests for your frontend service (if applicable)
    # Assuming your frontend is static or served by its own dev server
    location / {
        proxy_pass http://frontend:3000; # 'frontend' is the service name, 3000 is its port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # You might also want to add error pages or other specific Nginx directives here
}